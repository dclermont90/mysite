# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: '*'
  pull_request:
    branches: '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  the-work:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # See: https://github.com/actions/cache
      # Cache Composer Dependencies
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Copy a file from s3
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_s3_endpoint: 'https://fra1.digitaloceanspaces.com'
          source: 's3://dominique-test-space/.env-ci'
          dest: './.env'

      - name: Start Environment
        run: ./develop up -d

      - name: Install dev dependencies
        run: ./develop composer install

      - name: Setup Laravel
        run: ./develop art key:generate

      - name: Run tests
        run: APP_ENV=testing ./develop test

      - name: Copy a file from s3
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_s3_endpoint: 'https://fra1.digitaloceanspaces.com'
          source: 's3://dominique-test-space/.env-prod'
          dest: './.env'

      # Other ways to conditionally run prod steps:
      # https://stackoverflow.com/questions/58139406/only-run-job-on-specific-branch-with-github-actions
      - name: Generate Registry Configuration
        run: ./docker/build-registry-config ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: github.ref == 'refs/heads/master'

      - name: Start Docker Private Registry
        run: docker run -d -p 5000:5000 -v $(pwd)/docker/registry-config.yml:/etc/docker/registry/config.yml registry:2
        if: github.ref == 'refs/heads/master'

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push production image
        run: ./docker/build
        if: github.ref == 'refs/heads/master'
